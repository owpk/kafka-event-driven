plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
   	id 'application'
}

repositories {
	mavenCentral()
}

def serviceA = project(":serviceA")
def serviceB = project(":serviceB")
def serviceC = project(":serviceC")
def global = project(":global")

configure([serviceA, serviceB, serviceC, global]) {
	apply plugin: 'java'

	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'

	repositories {
		mavenLocal()
		mavenCentral()
	}

	dependencies {
		compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
		annotationProcessor 'org.projectlombok:lombok:1.18.22'
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}
}

configure([serviceA, serviceB, serviceC]) {
	dependencies {
		implementation 'ru.sparural:kafka:1.0'
	}

	test {
		useJUnitPlatform()
	}
}

configure([serviceA, global]) {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
	}
}

configure([serviceB, serviceC]) {
	dependencies {
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
	}
}

tasks.getByName "bootJar", {
	enabled = false
}